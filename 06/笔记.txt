vue动画
vue路由
--------------------------------------
transition 之前  属性
<p transition="fade"></p>

.fade-transition{}
.fade-enter{}
.fade-leave{}
--------------------------------------

到2.0以后 变成transition 组件

<transition name="fade">
	运动东西(元素，属性、路由....)
</transition>

class定义:

动画只能加到active身上
.fade-enter{}	//初始状态
.fade-enter-active{}  //变化成什么样  ->  当元素出来(显示)

.fade-leave{}
.fade-leave-active{} //变成成什么样   -> 当元素离开(消失)

如何animate.css配合用？
	<transition enter-active-class="animated zoomInLeft" leave-active-class="animated zoomOutRight">
            	<p v-show="show"></p>
    </transition>

多个元素运动:
	<transition-group enter-active-class="" leave-active-class="">
		<p :key=""></p>
		<p :key=""></p>
	</transition-group>
------------------------------------------
vue2.0 路由:
	http://router.vuejs.org/zh-cn/index.html
基本使用:
1.  布局
	<router-link to="/home">主页</router-link>

	<router-view></router-view>
2. 路由具体写法
	//组件
	var Home={
	    template:'<h3>我是主页</h3>'
	};
	var News={
	    template:'<h3>我是新闻</h3>'
	};

	//配置路由
	const routes=[
	    {path:'/home', componet:Home},
	    {path:'/news', componet:News},
	];

	//生成路由实例
	const router=new VueRouter({
	    routes
	});

	//最后挂到vue上
	new Vue({
	    router,
	    el:'#box'
	});
3. 重定向
	之前  router.rediect  废弃了
	{path:'*', redirect:'/home'}
------------------------------------------
路由嵌套:
	/user/username

	const routes=[
	    {path:'/home', component:Home},
	    {
	        path:'/user',
	        component:User,
	        children:[  //核心
	            {path:'username', component:UserDetail}
	        ]
	    },
	    {path:'*', redirect:'/home'}  //404
	];
------------------------------------------
/user/strive/age/10

:id
:username
:age
------------------------------------------
路由实例方法:
	router.push({path:'home'});  //直接添加一个路由,表现切换路由，本质往历史记录里面添加一个
	router.replace({path:'news'}) //替换路由，,表现切换路由,不会往历史记录里面添加
------------------------------------------
vue-cli
下载 1.0 脚手架
vue init webpack-simple#1.0 vue1.0demo

下载 2.0 脚手架
vue init webpack-simple vue2.0demo

 cnpm install时 如果报node版本npm版本问题直接删除原来的重新 老老实实使用 npm install 下载
------------------------------------------
npm install
------------------------------------------
脚手架:  vue-loader
	1.0  -> 
	new Vue({
	  el: '#app',
	  components:{App}
	})	
	2.0->
	new Vue({
	  el: '#app',
	  render: h => h(App)
	})

    翻译成es5
    
	new Vue({
	  el: '#app',
	  //render: h => h(App)
	  //render: createElement => createElement(App)
	  render: function (createElement) {
	    return createElement(App)
	  },
	})
------------------------------------------
vue2.0 
	vue-loader和vue-router配合
------------------------------------------

style-loader	css-loader

	style!css   这个顺序是定死的
------------------------------------------
项目:
------------------------------------------


	
1.vue-cli
下载 1.0 脚手架
vue init webpack-simple#1.0 vue1.0demo

下载 2.0 脚手架
vue init webpack-simple vue2.0demo

cnpm install时 如果报node版本npm版本问题直接删除原来的重新 老老实实使用 npm install 下载

-------使用 vue2.0脚手架

2.下载 vue2.0路由
   cnpm install vue-router --save

3.在main.js中引入vue-router
    import VueRouter from 'vue-router'
    Vue.use(VueRouter);
    const router=new VueRouter(routerConfig);
    
    新建路由配置文件 router.config.js 在router.config.js  中引入相关模块并配置路由

4.使用animate.css
  在main.js中引入animate.css
  import './assets/css/animate.css';
  import './assets/css/1.css'; 
  注意 没有 form

  js文件中使用css文件需要配置css-loader 和style-loader
  配置是先写style 在写css
  下载两个loader
  cnpm install css-loader style-laoder --save-dev

  如果不想用loader的话还可以直接在index.html文件中直接引入css样式文件
 
	scoped 表示该css文件只在当前.vue文件中起作用 
	 <style scoped>
		 li{
			list-style: none;
			line-height: 30px;
			font-size: 20px;
			color: #f60
		}
		div{
			border: 1px solid #000;
		}
	</style>
	



	



















